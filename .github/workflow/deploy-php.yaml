# Nombre del flujo de trabajo
name: Deploy PHP to Windows Server

# Eventos que disparan el flujo de trabajo
on:
  # Ejecutar cuando hay un push a los branches especificados
  push:
    branches:
      - main
      - taller-git

  # Permite la ejecución manual del GitHub Action
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"  # Describe el entorno al que se desplegará
        type: environment  # Define el tipo de entrada como 'environment'
        required: true  # Hace que este campo sea obligatorio

env:
  ENVIROMENT: ${{ github.event.inputs.environment }}

# Permissions for the GitHub Actions
permissions:
  id-token: write
  contents: read
  pull-requests: write

# Definición de los trabajos dentro del flujo de trabajo
jobs:
  deploy:
    runs-on: ubuntu-latest  # Define el tipo de runner (máquina virtual) en el que se ejecutará el trabajo
    environment: ${{ github.event.inputs.environment }}

    steps:
      # Paso 1: Checkout del código fuente
      - name: Checkout code
        uses: actions/checkout@v3  # Utiliza la acción oficial para clonar el repositorio en el runner

      # Paso 2: Configuración del agente SSH
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.1  # Utiliza la acción para configurar el agente SSH en el runner
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}  # Proporciona la clave privada SSH almacenada en los secretos del repositorio

      # Paso 3: Despliegue al servidor Windows
      - name: Deploy to Windows Server
        run: |
          # Conexión SSH al servidor y eliminación del contenido anterior en la carpeta wwwroot
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "Remove-Item -Recurse -Force C:\inetpub\wwwroot\*"
          # Copia de los nuevos archivos desde el repositorio al servidor Windows en la carpeta wwwroot
          scp -r ./* ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:C:\inetpub\wwwroot
